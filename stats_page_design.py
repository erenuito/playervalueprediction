# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'stats.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
df = pd.read_csv("players.csv", usecols = ["name","position","league", "matches",
                                         "Goals", "Shots", "On Target", "Passes", "Passing Accuracy", "Key Passes",
                                         "Crosses", "Crosses accurate", "Dribbles Attempts", "Dribbles Success",
                                         "Dribbled Past", "Dribbles Dispossessed", "Duels", "Duels Won", "Tackles",
                                         "Interceptions", "Blocks", "Fouls Committed", "Fouls Drawn", "Yellow Cards",
                                         "Red Cards", "Saves", "Inside Box Saves", "Penalty Saved", "Clean Sheets"])

class Ui_StatsPage(object):
    def setupUi(self, StatsPage):
        StatsPage.setObjectName("StatsPage")
        StatsPage.resize(941, 550)
        self.centralwidget = QtWidgets.QWidget(StatsPage)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(310, 30, 371, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(30, 90, 881, 400))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(29)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(21, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(22, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(23, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(24, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(25, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(26, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(27, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(28, item)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(30, 60, 141, 22))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.textChanged.connect(self.filter)
        StatsPage.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(StatsPage)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 941, 26))
        self.menubar.setObjectName("menubar")
        StatsPage.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(StatsPage)
        self.statusbar.setObjectName("statusbar")
        StatsPage.setStatusBar(self.statusbar)

        self.retranslateUi(StatsPage)
        QtCore.QMetaObject.connectSlotsByName(StatsPage)

        self.tableWidget.setSortingEnabled(True)

        name = df.name.to_list()
        self.tableWidget.setRowCount(len(name))
        satir = 0
        for veri in name:
            self.tableWidget.setItem(satir, 0, QtWidgets.QTableWidgetItem(veri))
            satir += 1

        position = df.position.to_list()
        self.tableWidget.setRowCount(len(position))
        satir = 0
        for veri in position:
            self.tableWidget.setItem(satir, 1, QtWidgets.QTableWidgetItem(veri))
            satir += 1

        league = df['league'].to_list()
        self.tableWidget.setRowCount(len(league))
        satir = 0
        for veri in league:
            self.tableWidget.setItem(satir, 2, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        matches = df['matches'].to_list()
        self.tableWidget.setRowCount(len(matches))
        satir = 0
        for veri in matches:
            self.tableWidget.setItem(satir, 3, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        goals = df['Goals'].to_list()
        self.tableWidget.setRowCount(len(goals))
        satir = 0
        for veri in goals:
            self.tableWidget.setItem(satir, 4, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        shots = df['Shots'].to_list()
        self.tableWidget.setRowCount(len(shots))
        satir = 0
        for veri in shots:
            self.tableWidget.setItem(satir, 5, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        onTarget = df['On Target'].to_list()
        self.tableWidget.setRowCount(len(onTarget))
        satir = 0
        for veri in onTarget:
            self.tableWidget.setItem(satir, 6, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        passes = df['Passes'].to_list()
        self.tableWidget.setRowCount(len(passes))
        satir = 0
        for veri in passes:
            self.tableWidget.setItem(satir, 7, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        passingAccuracy = df['Passing Accuracy'].to_list()
        self.tableWidget.setRowCount(len(passingAccuracy))
        satir = 0
        for veri in passingAccuracy:
            self.tableWidget.setItem(satir, 8, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        keyPasses = df['Key Passes'].to_list()
        self.tableWidget.setRowCount(len(keyPasses))
        satir = 0
        for veri in keyPasses:
            self.tableWidget.setItem(satir, 9, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        crosses = df['Crosses'].to_list()
        self.tableWidget.setRowCount(len(crosses))
        satir = 0
        for veri in crosses:
            self.tableWidget.setItem(satir, 10, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        crossesAccurate = df['Crosses accurate'].to_list()
        self.tableWidget.setRowCount(len(crossesAccurate))
        satir = 0
        for veri in crossesAccurate:
            self.tableWidget.setItem(satir, 11, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        dribblesAttempts = df['Dribbles Attempts'].to_list()
        self.tableWidget.setRowCount(len(dribblesAttempts))
        satir = 0
        for veri in dribblesAttempts:
            self.tableWidget.setItem(satir, 12, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        dribblesSuccess = df['Dribbles Success'].to_list()
        self.tableWidget.setRowCount(len(dribblesSuccess))
        satir = 0
        for veri in dribblesSuccess:
            self.tableWidget.setItem(satir, 13, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        dribbledPast = df['Dribbled Past'].to_list()
        self.tableWidget.setRowCount(len(dribbledPast))
        satir = 0
        for veri in dribbledPast:
            self.tableWidget.setItem(satir, 14, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        dribblesDispossessed = df['Dribbles Dispossessed'].to_list()
        self.tableWidget.setRowCount(len(dribblesDispossessed))
        satir = 0
        for veri in dribblesDispossessed:
            self.tableWidget.setItem(satir, 15, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        duels = df['Duels'].to_list()
        self.tableWidget.setRowCount(len(duels))
        satir = 0
        for veri in duels:
            self.tableWidget.setItem(satir, 16, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        duelsWon = df['Duels Won'].to_list()
        self.tableWidget.setRowCount(len(duelsWon))
        satir = 0
        for veri in duelsWon:
            self.tableWidget.setItem(satir, 17, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        tackles = df['Tackles'].to_list()
        self.tableWidget.setRowCount(len(tackles))
        satir = 0
        for veri in tackles:
            self.tableWidget.setItem(satir, 18, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        interceptions = df['Interceptions'].to_list()
        self.tableWidget.setRowCount(len(interceptions))
        satir = 0
        for veri in interceptions:
            self.tableWidget.setItem(satir, 19, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        blocks = df['Blocks'].to_list()
        self.tableWidget.setRowCount(len(blocks))
        satir = 0
        for veri in blocks:
            self.tableWidget.setItem(satir, 20, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        foulsCommitted = df['Fouls Committed'].to_list()
        self.tableWidget.setRowCount(len(foulsCommitted))
        satir = 0
        for veri in foulsCommitted:
            self.tableWidget.setItem(satir, 21, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        foulsDrawn = df['Fouls Drawn'].to_list()
        self.tableWidget.setRowCount(len(foulsDrawn))
        satir = 0
        for veri in foulsDrawn:
            self.tableWidget.setItem(satir, 22, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        yellowCards = df['Yellow Cards'].to_list()
        self.tableWidget.setRowCount(len(yellowCards))
        satir = 0
        for veri in yellowCards:
            self.tableWidget.setItem(satir, 23, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        redCards = df['Red Cards'].to_list()
        self.tableWidget.setRowCount(len(redCards))
        satir = 0
        for veri in redCards:
            self.tableWidget.setItem(satir, 24, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        saves = df['Saves'].to_list()
        self.tableWidget.setRowCount(len(saves))
        satir = 0
        for veri in saves:
            self.tableWidget.setItem(satir, 25, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        insideBoxSaves = df['Inside Box Saves'].to_list()
        self.tableWidget.setRowCount(len(insideBoxSaves))
        satir = 0
        for veri in insideBoxSaves:
            self.tableWidget.setItem(satir, 26, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        penaltySaved = df['Penalty Saved'].to_list()
        self.tableWidget.setRowCount(len(penaltySaved))
        satir = 0
        for veri in penaltySaved:
            self.tableWidget.setItem(satir, 27, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

        cleanSheets = df['Clean Sheets'].to_list()
        self.tableWidget.setRowCount(len(cleanSheets))
        satir = 0
        for veri in cleanSheets:
            self.tableWidget.setItem(satir, 28, QtWidgets.QTableWidgetItem(str(veri)))
            satir += 1

    def filter(self, filter_text):
        for i in range(self.tableWidget.rowCount()):
            for j in range(self.tableWidget.columnCount()):
                item = self.tableWidget.item(i, j)
                match = filter_text.lower() not in item.text().lower()
                self.tableWidget.setRowHidden(i, match)
                if not match:
                    break

    def retranslateUi(self, StatsPage):
        _translate = QtCore.QCoreApplication.translate
        StatsPage.setWindowTitle(_translate("StatsPage", "21/22 Season Statistics"))
        self.label.setText(_translate("StatsPage", "21/22 Season Player Statistics"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("StatsPage", "Player Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("StatsPage", "Position"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("StatsPage", "League"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("StatsPage", "Matches"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("StatsPage", "Goals"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("StatsPage", "Shots"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("StatsPage", "On Target"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("StatsPage", "Passes"))
        item = self.tableWidget.horizontalHeaderItem(8)
        item.setText(_translate("StatsPage", "Passing Accuracy"))
        item = self.tableWidget.horizontalHeaderItem(9)
        item.setText(_translate("StatsPage", "Key Passes"))
        item = self.tableWidget.horizontalHeaderItem(10)
        item.setText(_translate("StatsPage", "Crosses"))
        item = self.tableWidget.horizontalHeaderItem(11)
        item.setText(_translate("StatsPage", "Crosses Accurate"))
        item = self.tableWidget.horizontalHeaderItem(12)
        item.setText(_translate("StatsPage", "Dribbles Attempts"))
        item = self.tableWidget.horizontalHeaderItem(13)
        item.setText(_translate("StatsPage", "Dribbles Success"))
        item = self.tableWidget.horizontalHeaderItem(14)
        item.setText(_translate("StatsPage", "Dribbled Past"))
        item = self.tableWidget.horizontalHeaderItem(15)
        item.setText(_translate("StatsPage", "Dribbles Dispossessed"))
        item = self.tableWidget.horizontalHeaderItem(16)
        item.setText(_translate("StatsPage", "Duels"))
        item = self.tableWidget.horizontalHeaderItem(17)
        item.setText(_translate("StatsPage", "Duels Won"))
        item = self.tableWidget.horizontalHeaderItem(18)
        item.setText(_translate("StatsPage", "Tackles"))
        item = self.tableWidget.horizontalHeaderItem(19)
        item.setText(_translate("StatsPage", "Interceptions"))
        item = self.tableWidget.horizontalHeaderItem(20)
        item.setText(_translate("StatsPage", "Blocks"))
        item = self.tableWidget.horizontalHeaderItem(21)
        item.setText(_translate("StatsPage", "New Column"))
        item = self.tableWidget.horizontalHeaderItem(22)
        item.setText(_translate("StatsPage", "Fouls Drawn"))
        item = self.tableWidget.horizontalHeaderItem(23)
        item.setText(_translate("StatsPage", "Yellow Cards"))
        item = self.tableWidget.horizontalHeaderItem(24)
        item.setText(_translate("StatsPage", "Red Cards"))
        item = self.tableWidget.horizontalHeaderItem(25)
        item.setText(_translate("StatsPage", "Saves"))
        item = self.tableWidget.horizontalHeaderItem(26)
        item.setText(_translate("StatsPage", "Inside Box Saves"))
        item = self.tableWidget.horizontalHeaderItem(27)
        item.setText(_translate("StatsPage", "Penalty Saved"))
        item = self.tableWidget.horizontalHeaderItem(28)
        item.setText(_translate("StatsPage", "Clean Sheets"))
        self.lineEdit.setPlaceholderText(_translate("StatsPage", "Search..."))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    StatsPage = QtWidgets.QMainWindow()
    ui = Ui_StatsPage()
    ui.setupUi(StatsPage)
    StatsPage.show()
    sys.exit(app.exec_())
